// üìå –ó–∞–¥–∞—á–∞:
//     –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.
//     –ü–∞–ª–∏–Ω–¥—Ä–æ–º —á–∏—Ç–∞–µ—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤–æ —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ –∏ —Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 121 –∏–ª–∏ 1221).
// –ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ –≤ —Å—Ç—Ä–æ–∫—É.

const isPalindrome = (x) => {
    // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–∞–ª–∏–Ω–¥—Ä–æ–º–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, -121 ‚â† 121-)
    // –¢–∞–∫–∂–µ –∏—Å–∫–ª—é—á–∞–µ–º —á–∏—Å–ª–∞, –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—â–∏–µ—Å—è –Ω–∞ 0 (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10 ‚â† 01), –∫—Ä–æ–º–µ —Å–∞–º–æ–≥–æ 0
    if (x < 0 || (x % 10 === 0 && x !== 0)) return false;

    let reversed = 0;

    // –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–æ–ª–æ–≤–∏–Ω—É —á–∏—Å–ª–∞
    // –¶–∏–∫–ª —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–∫–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª –±–æ–ª—å—à–µ –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç–æ–π —á–∞—Å—Ç–∏
    while (x > reversed) {
        console.log(x,'x')
        console.log(reversed,'reversed')
        // –ë–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ü–∏—Ñ—Ä—É —á–∏—Å–ª–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –µ—ë –≤ –∫–æ–Ω–µ—Ü –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç–æ–≥–æ —á–∏—Å–ª–∞
        reversed = reversed * 10 + (x % 10);

        // –£–±–∏—Ä–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ü–∏—Ñ—Ä—É –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞
        x = Math.floor(x / 10);
    }

    // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª —Å –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç—ã–º:
    // 1. –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ —á—ë—Ç–Ω–∞—è: x === reversed
    // 2. –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ –Ω–µ—á—ë—Ç–Ω–∞—è: x === Math.floor(reversed / 10), —Ç.–∫. —Å–µ—Ä–µ–¥–∏–Ω–∞ –Ω–µ –≤–∞–∂–Ω–∞
    return x === reversed || x === Math.floor(reversed / 10);
};
// isPalindrome(121)
isPalindrome(12321)
// console.log(isPalindrome(121))  // true
// console.log(isPalindrome(12321))  // true
// console.log(isPalindrome(123))  // false
// console.log(isPalindrome(-121))    // false
// console.log(isPalindrome(10))  // false
// console.log(isPalindrome(0))  // true

// x = 123;
// reversed = 0;
//
// // —à–∞–≥ 1:
// reversed = 0 * 10 + 3 = 3     // x % 10 = 3
// x = 12
//
// // —à–∞–≥ 2:
// reversed = 3 * 10 + 2 = 32    // x % 10 = 2
// x = 1
//
// // —à–∞–≥ 3:
// reversed = 32 * 10 + 1 = 321
