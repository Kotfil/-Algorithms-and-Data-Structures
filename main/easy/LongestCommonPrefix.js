// üß© –£—Å–ª–æ–≤–∏–µ:
// –î–∞–Ω –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ strs, –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —Å–∞–º—ã–π –¥–ª–∏–Ω–Ω—ã–π
// –æ–±—â–∏–π –ø—Ä–µ—Ñ–∏–∫—Å —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö —Å—Ç—Ä–æ–∫.
// –ï—Å–ª–∏ –æ–±—â–µ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –Ω–µ—Ç ‚Äî –≤–µ—Ä–Ω—É—Ç—å –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É "".


// Input:
    let strs = ["flower", "flow", "flight"]
// Output:
//     "fl"

export const longestCommonPrefix = (strs) => {
    if (!strs.length) return "";

    let prefix = strs[0];
    // console.log("–ù–∞—á–∞–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å:", prefix);
    // console.log('_______________________');

    for (let i = 1; i < strs.length; i++) {
        // console.log(`\n–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å: "${strs[i]}"`);
        // console.log('_______________________');

        while (strs[i].indexOf(prefix) !== 0) {
            // console.log(`"${strs[i]}" vs prefix "${prefix}" ‚Üí ${strs[i].indexOf(prefix)}`);

            // console.log(`  "${strs[i]}" –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "${prefix}",
            // –æ–±—Ä–µ–∑–∞–µ–º`);
            // console.log('_______________________');
            prefix = prefix.slice(0, -1);
            // console.log("  –ù–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å:", prefix);
            // console.log('_______________________');
            if (!prefix) {
                // console.log("  –ü—Ä–µ—Ñ–∏–∫—Å —Å—Ç–∞–ª –ø—É—Å—Ç—ã–º ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º ''");
                // console.log('_______________________');
                return "";
            }
        }
        // console.log(`‚úì "${strs[i]}" –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "${prefix}"`);
    }

    // console.log("\n–ò—Ç–æ–≥–æ–≤—ã–π –æ–±—â–∏–π –ø—Ä–µ—Ñ–∏–∫—Å:", prefix);
    return prefix;
};


// console.log(); // "fl"
// console.log(longestCommonPrefix(["dog", "racecar", "car"]));    // ""
// console.log(longestCommonPrefix(["interspecies", "interstellar", "interstate"])); // "inters"
// console.log(longestCommonPrefix(["a"]));                         // "a"
// console.log(longestCommonPrefix(["abc", "abc", "abc"]));         // "abc"
