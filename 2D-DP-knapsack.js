function knapsack(weights, values, W) {
    const n = weights.length;
    const dp = Array.from({ length: n + 1 }, () => Array(W + 1).fill(0));

    for (let i = 1; i <= n; i++) {
        for (let w = 0; w <= W; w++) {
            if (weights[i - 1] <= w) {
                dp[i][w] = Math.max(
                    dp[i - 1][w],
                    dp[i - 1][w - weights[i - 1]] + values[i - 1]
                );
            } else {
                dp[i][w] = dp[i - 1][w];
            }
        }
    }

    return dp[n][W];
}


–û—Ç–ª–∏—á–Ω–æ, —Ä–∞–∑–±–∏—Ä–∞–µ–º –∑–∞–¥–∞—á—É **—Ä—é–∫–∑–∞–∫–∞ –ø–æ—à–∞–≥–æ–≤–æ**, —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏, **—Ç–∞–±–ª–∏—Ü–µ–π `dp`**, –∏ –ª–æ–≥–∏–∫–æ–π –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤.

---

## üì¶ –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:

```js
const weights = [2, 1, 3];  // –≤–µ—Å–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
const values =  [4, 2, 3];  // —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
const W = 4;                // –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å —Ä—é–∫–∑–∞–∫–∞
```

---

## üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è `dp`-—Ç–∞–±–ª–∏—Ü—ã:

```js
const dp = Array.from({ length: n + 1 }, () => Array(W + 1).fill(0));
```

–ü–æ–ª—É—á–∞–µ–º –º–∞—Ç—Ä–∏—Ü—É `dp[4][5]` (—Ä–∞–∑–º–µ—Ä `[n+1][W+1]`):
–≥–¥–µ `dp[i][w]` ‚Äî –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ **–ø–µ—Ä–≤—ã—Ö i –ø—Ä–µ–¥–º–µ—Ç–æ–≤** –ø—Ä–∏ **–≤–µ—Å–µ w**

---

## üîÅ –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º –∏ –≤–µ—Å—É:

```js
for (let i = 1; i <= n; i++) {
    for (let w = 0; w <= W; w++) {
```

### üîç –†–∞–∑–±–æ—Ä —Å—Ç—Ä–æ–∫ `dp[i][w]` –ø–æ —à–∞–≥–∞–º:

---

### ‚ñ∂ i = 1 (–ø–µ—Ä–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç, –≤–µ—Å = 2, —Ü–µ–Ω–Ω–æ—Å—Ç—å = 4)

| w (–≤–µ—Å) | –£—Å–ª–æ–≤–∏–µ `2 <= w`? | dp\[1]\[w]                                               |
| ------- | ----------------- | -------------------------------------------------------- |
| 0       | ‚ùå –Ω–µ—Ç             | `dp[1][0] = dp[0][0] = 0`                                |
| 1       | ‚ùå –Ω–µ—Ç             | `dp[1][1] = dp[0][1] = 0`                                |
| 2       | ‚úÖ –¥–∞              | `dp[1][2] = max(dp[0][2], dp[0][0] + 4) = max(0, 4) = 4` |
| 3       | ‚úÖ –¥–∞              | `dp[1][3] = max(dp[0][3], dp[0][1] + 4) = max(0, 4) = 4` |
| 4       | ‚úÖ –¥–∞              | `dp[1][4] = max(dp[0][4], dp[0][2] + 4) = max(0, 4) = 4` |

#### üëâ dp –ø–æ—Å–ª–µ 1-–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞:

```
[0, 0, 0, 0, 0]
[0, 0, 4, 4, 4]
```

---

### ‚ñ∂ i = 2 (–≤—Ç–æ—Ä–æ–π –ø—Ä–µ–¥–º–µ—Ç, –≤–µ—Å = 1, —Ü–µ–Ω–Ω–æ—Å—Ç—å = 2)

| w | –£—Å–ª–æ–≤–∏–µ `1 <= w`? | dp\[2]\[w]                                                 |
| - | ----------------- | ---------------------------------------------------------- |
| 0 | ‚ùå –Ω–µ—Ç             | `dp[2][0] = dp[1][0] = 0`                                  |
| 1 | ‚úÖ –¥–∞              | `dp[2][1] = max(dp[1][1], dp[1][0] + 2) = max(0, 2) = 2`   |
| 2 | ‚úÖ –¥–∞              | `dp[2][2] = max(dp[1][2], dp[1][1] + 2) = max(4, 2) = 4`   |
| 3 | ‚úÖ –¥–∞              | `dp[2][3] = max(dp[1][3], dp[1][2] + 2) = max(4, 6) = 6` ‚úÖ |
| 4 | ‚úÖ –¥–∞              | `dp[2][4] = max(dp[1][4], dp[1][3] + 2) = max(4, 6) = 6` ‚úÖ |

#### üëâ dp –ø–æ—Å–ª–µ 2-–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞:

```
[0, 0, 0, 0, 0]
[0, 0, 4, 4, 4]
[0, 2, 4, 6, 6]
```

---

### ‚ñ∂ i = 3 (—Ç—Ä–µ—Ç–∏–π –ø—Ä–µ–¥–º–µ—Ç, –≤–µ—Å = 3, —Ü–µ–Ω–Ω–æ—Å—Ç—å = 3)

| w | –£—Å–ª–æ–≤–∏–µ `3 <= w`? | dp\[3]\[w]                                               |
| - | ----------------- | -------------------------------------------------------- |
| 0 | ‚ùå –Ω–µ—Ç             | `dp[3][0] = dp[2][0] = 0`                                |
| 1 | ‚ùå –Ω–µ—Ç             | `dp[3][1] = dp[2][1] = 2`                                |
| 2 | ‚ùå –Ω–µ—Ç             | `dp[3][2] = dp[2][2] = 4`                                |
| 3 | ‚úÖ –¥–∞              | `dp[3][3] = max(dp[2][3], dp[2][0] + 3) = max(6, 3) = 6` |
| 4 | ‚úÖ –¥–∞              | `dp[3][4] = max(dp[2][4], dp[2][1] + 3) = max(6, 5) = 6` |

#### üëâ dp –ø–æ—Å–ª–µ 3-–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞:

```
[0, 0, 0, 0, 0]
[0, 0, 4, 4, 4]
[0, 2, 4, 6, 6]
[0, 2, 4, 6, 6]
```

---

## ‚úÖ –û—Ç–≤–µ—Ç:

```js
console.log(dp[3][4]); // 6 ‚Äî –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å
```

---

## üîÅ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤:

```js
function getSelectedItems(dp, weights, values, W) {
    const selected = [];
    let i = weights.length;
    let w = W;

    while (i > 0 && w > 0) {
        if (dp[i][w] !== dp[i - 1][w]) {
            selected.push(i - 1);
            w -= weights[i - 1];
        }
        i--;
    }

    return selected.reverse();
}
```

---

### ‚ñ∂ –ü–æ—à–∞–≥–æ–≤–æ:

* `i = 3`, `w = 4`: `dp[3][4] === dp[2][4]` ‚Üí ‚ùå –Ω–µ –±—Ä–∞–ª–∏ 3-–π
* `i = 2`, `w = 4`: `dp[2][4] !== dp[1][4]` ‚Üí ‚úÖ –≤–∑—è–ª–∏ 2-–π (`i-1 = 1`), `w = 4 - 1 = 3`
* `i = 1`, `w = 3`: `dp[1][3] !== dp[0][3]` ‚Üí ‚úÖ –≤–∑—è–ª–∏ 1-–π (`i-1 = 0`), `w = 3 - 2 = 1`

‚Üí –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã: `[1, 0]` ‚Üí –ø—Ä–µ–¥–º–µ—Ç—ã 2 –∏ 1

---

### ‚úÖ –ò—Ç–æ–≥:

* **–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å**: `6`
* **–í–∑—è—Ç—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã**: `2-–π (–≤–µ—Å 1, —Ü–µ–Ω–Ω–æ—Å—Ç—å 2)` + `1-–π (–≤–µ—Å 2, —Ü–µ–Ω–Ω–æ—Å—Ç—å 4)`

–•–æ—á–µ—à—å —É—Å–ª–æ–∂–Ω—ë–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –∏–ª–∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é?
